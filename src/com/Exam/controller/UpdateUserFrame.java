/*
 * UpdateUserFrame.java
 *
 * Created on 2008年8月9日, 上午10:11
 */

package com.Exam.controller;

import java.io.*;
import java.util.Objects;

import javax.swing.JOptionPane;

import com.Exam.bean.*;
import com.Exam.dao.*;


/**
 * 用户修改窗口
 */
public class UpdateUserFrame extends javax.swing.JFrame {

    /**
     * Creates new form UpdateUserFrame
     */
    public UpdateUserFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        userType = new javax.swing.JLabel();
        UserTypejComboBox = new javax.swing.JComboBox();
        userNameType = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        userNameType1 = new javax.swing.JLabel();
        jPasswordField1 = new javax.swing.JPasswordField();
        userPassWord = new javax.swing.JLabel();
        jPasswordField2 = new javax.swing.JPasswordField();
        userPassWord1 = new javax.swing.JLabel();
        examStatusTextField = new javax.swing.JTextField();  // 新增的文本框
        uopdatejButton = new javax.swing.JButton();
        resSetjButton = new javax.swing.JButton();
        closejButton = new javax.swing.JButton();
        jLabel1.setText("");
        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });
        setTitle("用户修改");
        userType.setText("用户类型：");
        File file = new File("tableId.txt");
        try {
            FileInputStream in = new FileInputStream(file);
            byte byt[] = new byte[1024];
            int len = in.read(byt);
            String strid = new String(byt, 0, len);
            int userId = Integer.parseInt(strid);
            in.close();
            file.delete();
            MyFindUserDao myFindUser = new MyFindUserDao();
            User us = new User();
            us.setId(userId);// 获取从文件中读取的数据的Id
            user = myFindUser.getUserID(us);// 根据读取的id寻找此用户

        } catch (Exception e) {
            e.printStackTrace();
        }

        UserTypejComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"考生", "管理员"}));
        if (user.getUserType() == 1) {
            UserTypejComboBox.setSelectedIndex(1);
        }
        if (user.getUserType() == 0) {
            UserTypejComboBox.setSelectedIndex(0);
        }
        userNameType.setText("用户姓名：");

        jTextField1.setText(ChDeal.toChinese(user.getUserName()));

        userNameType1.setText("用户密码：");

        jPasswordField1.setText(user.getPassWord());

        userPassWord.setText("确认密码：");

        jPasswordField2.setText(user.getPassWord());

        userPassWord1.setText("考试科目：");

        examStatusTextField.setText("");  // 初始化为空白

        uopdatejButton.setText("修改");
        uopdatejButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                uopdatejButtonActionPerformed(evt);
            }
        });
        resSetjButton.setText("重添");
        resSetjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resSetjButtonActionPerformed(evt);
            }
        });
        closejButton.setText("退出");
        closejButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closejButtonActionPerformed(evt);
            }
        });
        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(93, 93, 93)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(uopdatejButton)
                                                .addGap(18, 18, 18)
                                                .addComponent(resSetjButton)
                                                .addGap(18, 18, 18)
                                                .addComponent(closejButton)
                                                .addGap(20, 20, 20))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                        .addComponent(userType)
                                                        .addComponent(userNameType)
                                                        .addComponent(userNameType1)
                                                        .addComponent(userPassWord1)
                                                        .addComponent(userPassWord))
                                                .addGap(18, 18, 18)
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                        .addComponent(jPasswordField2, javax.swing.GroupLayout.Alignment.TRAILING, 0, 0, Short.MAX_VALUE)
                                                        .addComponent(UserTypejComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(jPasswordField1, javax.swing.GroupLayout.Alignment.TRAILING, 0, 0, Short.MAX_VALUE)
                                                        .addComponent(jTextField1, javax.swing.GroupLayout.Alignment.TRAILING)
                                                        .addComponent(examStatusTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 183, Short.MAX_VALUE))))
                                .addGap(122, 122, 122))
        );
        jPanel1Layout.setVerticalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(24, 24, 24)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(userType)
                                        .addComponent(UserTypejComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(userNameType))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jPasswordField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(userNameType1))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jPasswordField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(userPassWord))
                                .addGap(20, 20, 20)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(examStatusTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(userPassWord1))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(closejButton)
                                        .addComponent(resSetjButton)
                                        .addComponent(uopdatejButton))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 476, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }

    //点击修改按钮
    private void uopdatejButtonActionPerformed(java.awt.event.ActionEvent evt) {
        boolean flag = false;
        if (user.getUserName().equals("")) {
            JOptionPane.showMessageDialog(this, "没有指定用户名", "信息对话框", JOptionPane.WARNING_MESSAGE);
            return;
        }




        if (!jPasswordField1.getText().equals(jPasswordField2.getText())) {
            JOptionPane.showMessageDialog(this, "两次输入的密码不一致", "信息对话框", JOptionPane.WARNING_MESSAGE);
            return;
        }
        User uses = null;

        MyFindUserDao findUser = new MyFindUserDao();
        uses = findUser.getUserID(user);// 根据文件读取的数据Id查找用户

        if (uses.getPassWord().equals(jPasswordField1.getText())) {//如果密码没有修改

            user.setUserName(ChDeal.toISO(jTextField1.getText()));
            if (UserTypejComboBox.getSelectedItem().toString().equals("考生")) {
                user.setUserType(0);
            }
            if (UserTypejComboBox.getSelectedItem().toString().equals("管理员")) {
                user.setUserType(1);
            }
            //如果考试科目不为空，将输入的考试科目传递给user对象
            if (!examStatusTextField.getText().equals("")) {
                user.setSubject(examStatusTextField.getText());
            }

            FindGrade findGrade = new FindGrade();
            if (!(Objects.equals(findGrade.getSubject(uses.getId()), examStatusTextField.getText()))) {
                InsertUserDao insertUser = new InsertUserDao();
                flag = insertUser.InsertNewData(user);

            }

            else {
                InsertUserDao insertUser = new InsertUserDao();
                flag = insertUser.updateUserHaveIn2(user);
            }
        } else {

            user.setUserName(ChDeal.toISO(jTextField1.getText()));
            MyMD5 myMD5 = new MyMD5();
            user.setPassWord(myMD5.createPassWord(jPasswordField1.getText()));
            if (UserTypejComboBox.getSelectedItem().toString().equals("考生")) {
                user.setUserType(0);
            }
            if (UserTypejComboBox.getSelectedItem().toString().equals("管理员")) {
                user.setUserType(1);
            }
            //如果考试科目不为空，将输入的考试科目传递给user对象
            if (!examStatusTextField.getText().equals("")) {
                user.setSubject(examStatusTextField.getText());
            }
//            if(examStatusTextField.getText().equals("没有参加考试")){
//                user.setHaveIn(0);
//            }
//            if(examStatusTextField.getText().equals("已经参加考试")){
//                user.setHaveIn(1);
//            }
            FindGrade findGrade = new FindGrade();
            if (!(Objects.equals(findGrade.getSubject(uses.getId()), examStatusTextField.getText()))) {
                InsertUserDao insertUser = new InsertUserDao();
                flag = insertUser.InsertNewData(user);

            }

            else {
                InsertUserDao insertUser = new InsertUserDao();
                flag = insertUser.updateUserHaveIn2(user);
            }
        }

        if (flag == true) {
            JOptionPane.showMessageDialog(this, "用户信息修改成功", "信息对话框", JOptionPane.WARNING_MESSAGE);
        }

    }

    private void resSetjButtonActionPerformed(java.awt.event.ActionEvent evt) {
        if (user.getUserType() == 1) {
            UserTypejComboBox.setSelectedIndex(1);
        }
        if (user.getUserType() == 0) {
            UserTypejComboBox.setSelectedIndex(0);
        }
        jTextField1.setText(user.getUserName());  // 初始化为空白
        examStatusTextField.setText("");  // 初始化为空白
        jPasswordField1.setText(user.getPassWord());
        jPasswordField2.setText(user.getPassWord());
    }

    private void closejButtonActionPerformed(java.awt.event.ActionEvent evt) {
        dispose();
        UserAddFrame userAdd = new UserAddFrame();
        userAdd.setVisible(true);
        userAdd.setBounds(200, 200, 430, 330);
    }

    private void formWindowClosing(java.awt.event.WindowEvent evt) {
        dispose();
    }

    private javax.swing.JComboBox UserTypejComboBox;
    private javax.swing.JButton closejButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JPasswordField jPasswordField2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JButton resSetjButton;
    private javax.swing.JButton uopdatejButton;
    private javax.swing.JLabel userNameType;
    private javax.swing.JLabel userNameType1;
    private javax.swing.JLabel userPassWord;
    private javax.swing.JLabel userPassWord1;
    private javax.swing.JLabel userType;
    private javax.swing.JTextField examStatusTextField;  // 新增的文本框
    private User user = null;
    private Integer temp;
}
