/*
 * MyLand2.java
 *
 * Created on 2008年9月10日, 下午1:07
 */

package com.Exam.Index;



import java.awt.Insets;
import javax.swing.*;
import javax.swing.GroupLayout;
import javax.swing.LayoutStyle;

import com.Exam.bean.*;
import com.Exam.controller.ControllerFrame;
import com.Exam.dao.*;
import work.SelectTestSubjects;
/**
 * @author Administrator
 */

/**
 * 考试开始界面，tao
 */

public class MyLand extends javax.swing.JFrame {

	/** Creates new form MyLand2 */
	public MyLand() {
		initComponents();
	}

	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated Code">
	private void initComponents() {

		jTextField3 = new javax.swing.JTextField();
		jTextField1 = new javax.swing.JTextField();
		jpanel = new MyJPanel();
		choicejLabel = new javax.swing.JLabel();
		userChoicejComboBox = new javax.swing.JComboBox();
		choicejLabel1 = new javax.swing.JLabel();
		UserNameTextField = new javax.swing.JTextField();
		choicejLabel2 = new javax.swing.JLabel();
		PassWordjTextField = new javax.swing.JPasswordField();
		enterButton = new javax.swing.JButton();
		enterButton.setMargin(new Insets(2, 2, 2, 2));
		resButtonjButton = new javax.swing.JButton();
		resButtonjButton.setMargin(new Insets(2, 2, 2, 2));

		jTextField3.setText("jTextField3");

		jTextField1.setText("jTextField1");

		setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

		choicejLabel.setText("选择用户：");

		userChoicejComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"", "考生", "管理员"}));
		setTitle("考试系统");
		choicejLabel1.setText("用 户 名：");

		UserNameTextField.setText("");

		choicejLabel2.setText(" 密 码 ：");

		PassWordjTextField.setText("");

		enterButton.setText("登录");
		enterButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				enterButtonActionPerformed(evt);
			}
		});

		resButtonjButton.setText("重置");
		resButtonjButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton2ActionPerformed(evt);
			}
		});

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(
				layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
						.addComponent(jpanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
		);
		layout.setVerticalGroup(
				layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
						.addComponent(jpanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
		);
		javax.swing.GroupLayout jpanelLayout = new javax.swing.GroupLayout(jpanel);
		jpanelLayout.setHorizontalGroup(
				jpanelLayout.createParallelGroup(GroupLayout.Alignment.TRAILING)
						.addGroup(jpanelLayout.createSequentialGroup()
								.addGap(216, 216, 216)
								.addGroup(jpanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
										.addGroup(jpanelLayout.createSequentialGroup()
												.addComponent(choicejLabel, GroupLayout.PREFERRED_SIZE, 71, GroupLayout.PREFERRED_SIZE)
												.addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
												.addComponent(userChoicejComboBox, GroupLayout.PREFERRED_SIZE, 120, GroupLayout.PREFERRED_SIZE))
										.addGroup(jpanelLayout.createSequentialGroup()
												.addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
												.addGroup(jpanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
														.addGroup(jpanelLayout.createSequentialGroup()
																.addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
																.addComponent(choicejLabel2, GroupLayout.PREFERRED_SIZE, 71, GroupLayout.PREFERRED_SIZE)
																.addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
																.addComponent(PassWordjTextField, GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE))
														.addGroup(jpanelLayout.createSequentialGroup()
																.addComponent(choicejLabel1, GroupLayout.PREFERRED_SIZE, 71, GroupLayout.PREFERRED_SIZE)
																.addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
																.addComponent(UserNameTextField, GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE)))))
								.addGap(82, 82, 82))
						.addGroup(jpanelLayout.createSequentialGroup()
								.addContainerGap(256, Short.MAX_VALUE)
								.addComponent(enterButton, GroupLayout.PREFERRED_SIZE, 56, GroupLayout.PREFERRED_SIZE)
								.addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
								.addComponent(resButtonjButton)
								.addGap(123, 123, 123))
		);
		jpanelLayout.setVerticalGroup(
				jpanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
						.addGroup(jpanelLayout.createSequentialGroup()
								.addGap(85, 85, 85)
								.addGroup(jpanelLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
										.addComponent(choicejLabel)
										.addComponent(userChoicejComboBox, GroupLayout.PREFERRED_SIZE, 21, GroupLayout.PREFERRED_SIZE))
								.addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
								.addGroup(jpanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
										.addComponent(choicejLabel1)
										.addComponent(UserNameTextField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
								.addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
								.addGroup(jpanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
										.addComponent(choicejLabel2)
										.addComponent(PassWordjTextField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
								.addGap(18, 18, 18)
								.addGroup(jpanelLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
										.addComponent(resButtonjButton, GroupLayout.PREFERRED_SIZE, 23, GroupLayout.PREFERRED_SIZE)
										.addComponent(enterButton, GroupLayout.PREFERRED_SIZE, 23, GroupLayout.PREFERRED_SIZE))
								.addContainerGap(71, Short.MAX_VALUE))
		);
		jpanel.setLayout(jpanelLayout);
		pack();
	}

	/*
	 * 重置按钮的事件处理
	 */
	private void enterButtonActionPerformed(java.awt.event.ActionEvent evt) {
		if (userChoicejComboBox.getSelectedIndex() == 0) {
			JOptionPane.showMessageDialog(this, "没有确定路径的'用户类型'",
					"信息对话框", JOptionPane.WARNING_MESSAGE);
			return;
		}
		if (UserNameTextField.getText().equals("")) {
			JOptionPane.showMessageDialog(this, "用户名不能为空",
					"密码不能为空", JOptionPane.WARNING_MESSAGE);
			return;
		}
		if (PassWordjTextField.getText().equals("")) {
			JOptionPane.showMessageDialog(this, "密码不能为空", "信息对话框", JOptionPane.WARNING_MESSAGE);
			return;
		}
		MyFindUserDao findUser = new MyFindUserDao();
		User user = new User();
		user.setUserName(UserNameTextField.getText());  //输入的用户名
		user.setPassWord(PassWordjTextField.getText());    //输入的密码
		User users = findUser.getUser(user);
		if ((users.getUserType() == 1 && !(userChoicejComboBox.getSelectedItem().equals("管理员")))) {
			JOptionPane.showMessageDialog(this, "登录系统身份不符", "信息对话框", JOptionPane.WARNING_MESSAGE);
			return;
		}//这个if语句作用是来先判断users.getUserType() == 1以及在用户类型中是不是选择“管理员”身份，不是的话弹出对话框，告诉你登录身份不符
		if ((users.getUserType() == 0) && !(userChoicejComboBox.getSelectedItem().equals("考生"))) {
			JOptionPane.showMessageDialog(this, "登录系统身份不符", "信息对话框", JOptionPane.WARNING_MESSAGE);
			return;
		}//这个if同上，来判断是不是考生
		if ((users.getId() != 0) && (users.getUserType() == 0)) { //用户是考生
			int id = users.getId();
			java.io.File file = new java.io.File("save.txt");
			try {
				if (file.exists()) {
					file.delete();
				}//如果"save.txt"文件存在，则删除该文件。这样做的目的可能是在每次登录时，清除之前保存的用户ID信息。
				file.createNewFile();//创建一个新的"save.txt"文件
				java.io.FileOutputStream out = new java.io.FileOutputStream(file);//写入数据到"save.txt"文件中
				byte buy[] = ("" + id).getBytes();
				out.write(buy);
				out.close();
			} catch (Exception e) {
				e.printStackTrace();
			}
			InsertUserDao insertUserDao = new InsertUserDao();
			insertUserDao.setUserHaveIn(users);

			// 获取用户id
			int userID = users.getId();
			// 创建SelectTestSubjects类实例并传递用户ID
			SelectTestSubjects selectTestSubjects = new SelectTestSubjects();
			selectTestSubjects.setUserID(userID);

// 设置selectTestSubjects对象可见，即显示这个窗口
			selectTestSubjects.setVisible(true);
			selectTestSubjects.setBounds(200, 200, 400, 300); // 设置这个窗口在屏幕上的大小和位置
			selectTestSubjects.setTitle("考试科目选择"); // 设置这个窗口的标题

			this.dispose(); // 关闭当前窗口

			//接下来是设计一个窗口
//            StudentExam studentExam = new StudentExam();
//            studentExam.setVisible(true);//设置studentExam对象可见，即显示这个窗口
//            studentExam.setBounds(200, 200, 400, 300);//设置这个窗口在屏幕上的大小和位置
//            studentExam.setTitle("考试系统");//设置这个窗口的标题
//            this.dispose();//关闭当前窗口
		}

		if ((users.getId() != 0) && (users.getUserType() == 1)) {  //判断语句
			dispose();  //关闭当前窗口
			ControllerFrame controller = new ControllerFrame();
			controller.setVisible(true);  //设置controller对象可见，即显示这个窗口
			controller.setBounds(100, 100, 700, 500);//设置这个窗口在屏幕上的大小和位置
		} else if (users.getId() == 0) {
			JOptionPane.showMessageDialog(this, "用户名或密码错误", "信息对话框", JOptionPane.WARNING_MESSAGE);
		}
	}

	private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {
		UserNameTextField.setText("");
		PassWordjTextField.setText("");
	}

	public static void main(String[] args) {
		MyLand myLand = new MyLand();
		myLand.setVisible(true);
	}

	private javax.swing.JLabel choicejLabel;
	private javax.swing.JLabel choicejLabel1;
	private javax.swing.JLabel choicejLabel2;
	private javax.swing.JButton enterButton;
	private javax.swing.JButton resButtonjButton;
	private javax.swing.JComboBox userChoicejComboBox;
	private javax.swing.JPasswordField PassWordjTextField;
	private javax.swing.JTextField jTextField1;
	private javax.swing.JTextField UserNameTextField;
	private javax.swing.JTextField jTextField3;
	private MyJPanel jpanel;
}
